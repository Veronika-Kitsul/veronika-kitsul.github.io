<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.4">Jekyll</generator><link href="https://veronika-kitsul.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://veronika-kitsul.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2025-04-03T16:09:48+00:00</updated><id>https://veronika-kitsul.github.io/feed.xml</id><title type="html">blank</title><entry><title type="html">Princeton’s Russian program doesn’t belong in Estonia</title><link href="https://veronika-kitsul.github.io/blog/2025/princeton-estonia/" rel="alternate" type="text/html" title="Princeton’s Russian program doesn’t belong in Estonia"/><published>2025-03-04T23:39:00+00:00</published><updated>2025-03-04T23:39:00+00:00</updated><id>https://veronika-kitsul.github.io/blog/2025/princeton-estonia</id><content type="html" xml:base="https://veronika-kitsul.github.io/blog/2025/princeton-estonia/"><![CDATA[<p>Redirecting to another page.</p>]]></content><author><name></name></author><category term="opinion"/><category term="princeton"/><category term="activism"/><category term="language"/><summary type="html"><![CDATA[US universities and my alma-mater, unfortunately, continue russian colonial practices in post-Soviet countries]]></summary></entry><entry><title type="html">eBPF Basics: A Guide to the Next Evolution in Systems Programming</title><link href="https://veronika-kitsul.github.io/blog/2025/ebpf-basics/" rel="alternate" type="text/html" title="eBPF Basics: A Guide to the Next Evolution in Systems Programming"/><published>2025-01-15T20:56:16+00:00</published><updated>2025-01-15T20:56:16+00:00</updated><id>https://veronika-kitsul.github.io/blog/2025/ebpf-basics</id><content type="html" xml:base="https://veronika-kitsul.github.io/blog/2025/ebpf-basics/"><![CDATA[<p>You’ve probably heard whispers about <b>eBPF</b>, maybe seen it pop up in a tech article, or heard someone in the know talk about it with a sense of awe. But what exactly is eBPF? Is it just another buzzword, or is it something more? Don’t worry—whether you’re curious but unsure, or have no idea what eBPF even stands for, this post is here to demystify it for you. It has taken me dozens of articles to understand what exactly is going on and I am still learning.</p> <p>Let’s start with a bit of context. Operating system kernels are the beating heart of our modern computing systems, offering incredible functionality. But there’s a catch—if you want to add new features or tweak the kernel to meet specific needs, you’re often looking at years of development, debugging, and rigorous testing. Sounds daunting, right?</p> <p>Enter eBPF (Extended Berkeley Packet Filter), a game-changer that’s transformed how we interact with operating systems. Think of it as a superpower for engineers: an in-kernel virtual machine that allows you to safely and efficiently extend kernel behavior—without the wait times or the risk of breaking the system. It’s fast, flexible, and robust, which is why leading tech companies have embraced it to redefine observability, networking, and security. With eBPF, they’re not just meeting performance and efficiency goals—they’re taking them to the next level.</p> <hr/> <p>eBPF represents a significant leap in operating system design, fundamentally shifting how developers interact with kernel-level functionality. Traditional kernel programming often required extensive knowledge of kernel internals, involved writing custom modules, and carried significant risks of destabilizing the system. eBPF eliminates many of these risks, allowing for dynamic, safe, and highly performant modifications to kernel behavior.</p> <p>Unlike traditional approaches, eBPF operates within a well-defined virtual machine, supported by a robust verifier that ensures safety by analyzing bytecode before execution. This enables it to run highly optimized programs in sensitive contexts, such as networking and security, without compromising stability. Moreover, the scalability and adaptability of eBPF have made it a go-to technology in modern data centers, where companies leverage it for everything from load balancing to threat detection.</p> <p>This technology offers unparalleled insights into major kernel functions, providing visibility into various networking stack layers, system calls, function entry and exit points, and kernel tracepoints. These capabilities have driven the adoption of eBPF across diverse domains, such as observability, networking, and security. Leading technology companies, including Meta, Google, Microsoft <d-cite key="ebpf_windows"></d-cite>, Apple, Netflix, and Cloudflare, have leveraged eBPF to optimize performance, scalability, and resource efficiency in their systems <d-cite key="ebpf_case_studies"></d-cite>. This adoption is further supported by rich library ecosystems, enabling seamless development in systems programming languages like C/C++, Rust, and Go, and the community’s efforts to expand its capabilities beyond Linux, namely Windows <d-cite key="ebpf_windows"></d-cite> and Android <d-cite key="android_bpf"></d-cite>. Every year, there are a couple of major eBPF conferences, such as eBPF Summmit <d-cite key="eBPFSummit2024"></d-cite>, Cilium Con <d-cite key="linuxfoundation2023ciliumcon"></d-cite>, and KubeCon <d-cite key="cilium2024kubecon"></d-cite>.</p> <hr/> <h3 id="how-do-i-write-ebpf-programs-and-their-architecture">How do I write eBPF programs and their architecture</h3> <p>Engineers can write eBPF programs in C/C++, Rust, Go, or eBPF bytecode directly (it’s rarely done in practice). When the program is ready to be loaded into the kernel for execution, it’s first validated by the eBPF verifier that makes sure the program is safe to add to the kernel and won’t crash it. More details on how the verifier works can be found in the next section. If the verifier confirmed the program is safe to run, it then gets JIT-compiled into machine code that is attached to target events (hooks) <d-cite key="linuxfoundation2024stateofebpf"></d-cite>. When the specified event executes (for example, machine receives a network packet), it triggers the eBPF program execution.</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/hook-overview.webp" sizes="95vw"/> <img src="/assets/img/hook-overview.webp" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> eBPF hooks. <d-cite key="ebpf_what_is"></d-cite> </div> <p><b>Hooks.</b> eBPF programs are event-driven and as such can be inserted to execute at different “hooks” in the normal kernel execution. eBPF program hooks are largely defined by the program type. The program type determines where and how the eBPF program can be attached in the kernel and what context the program will operate on. Each program type corresponds to specific kernel subsystems or events and dictates the program’s interaction with the system. Table 1 highlights some of the main program types and their use cases. For more comprehensive documentation on them, refer to <d-cite key="linuxkernel_program_types"></d-cite>. If eBPF hook is not available in a certain context, it is often possible to create a kernel probe (kprobe) or a user probe (uprobe) to attach eBPF programs almost anywhere in the kernel or user-space applications <d-cite key="ebpf_what_is"></d-cite>.</p> <table> <thead> <tr> <th style="text-align: left">Program type</th> <th style="text-align: left">Hook location</th> <th style="text-align: left">Primary use case</th> </tr> </thead> <tbody> <tr> <td style="text-align: left"><code class="language-plaintext highlighter-rouge">SOCKET_FILTER</code></td> <td style="text-align: left">Sockets</td> <td style="text-align: left">Packet filtering and monitoring.</td> </tr> <tr> <td style="text-align: left"><code class="language-plaintext highlighter-rouge">XDP</code></td> <td style="text-align: left">Network Interface Driver</td> <td style="text-align: left">High-performance packet processing.</td> </tr> <tr> <td style="text-align: left"><code class="language-plaintext highlighter-rouge">SCHED_CLS</code></td> <td style="text-align: left">Traffic Control</td> <td style="text-align: left">Traffic shaping and quality of service (QoS).</td> </tr> <tr> <td style="text-align: left"><code class="language-plaintext highlighter-rouge">KPROBE</code></td> <td style="text-align: left">Kernel Function Entry/Exit</td> <td style="text-align: left">Tracing and debugging kernel functions.</td> </tr> <tr> <td style="text-align: left"><code class="language-plaintext highlighter-rouge">TRACEPOINT</code></td> <td style="text-align: left">Kernel Tracepoints</td> <td style="text-align: left">Monitoring system events like syscalls.</td> </tr> <tr> <td style="text-align: left"><code class="language-plaintext highlighter-rouge">CGROUP_SKB</code></td> <td style="text-align: left">Control Groups</td> <td style="text-align: left">Monitoring and controlling packets in cGroups.</td> </tr> <tr> <td style="text-align: left"><code class="language-plaintext highlighter-rouge">LWT_IN</code></td> <td style="text-align: left">Lightweight Tunnel Ingress</td> <td style="text-align: left">Handling packets entering tunnels.</td> </tr> <tr> <td style="text-align: left"><code class="language-plaintext highlighter-rouge">NETFILTER</code></td> <td style="text-align: left">Netfilter Hooks</td> <td style="text-align: left">Custom packet filtering.</td> </tr> <tr> <td style="text-align: left"><code class="language-plaintext highlighter-rouge">PERF_EVENT</code></td> <td style="text-align: left">Performance Events</td> <td style="text-align: left">Monitoring hardware performance counters.</td> </tr> <tr> <td style="text-align: left"><code class="language-plaintext highlighter-rouge">RAW_TRACEPOINT</code></td> <td style="text-align: left">Low-level Tracepoints</td> <td style="text-align: left">Advanced kernel tracing with low overhead.</td> </tr> <tr> <td style="text-align: left"><code class="language-plaintext highlighter-rouge">LSM</code></td> <td style="text-align: left">Linux Security Module</td> <td style="text-align: left">Enforcing custom security policies.</td> </tr> <tr> <td style="text-align: left"><code class="language-plaintext highlighter-rouge">STRUCT_OPS</code></td> <td style="text-align: left">Kernel Structures</td> <td style="text-align: left">Overriding kernel structure operations.</td> </tr> </tbody> </table> <div class="caption"> Representative eBPF Program Types. <d-cite key="linuxkernel_program_types"></d-cite> </div> <p><b>Programming eBPF.</b> Oftentimes, eBPF programs are written indirectly, using higher-level infrastructures such as Cilium, bcc, bpftrace, Tetragon, and others <d-cite key="eBPFApplications"></d-cite> . They hide many system calls that eBPF programs execute underneath behind a layer of abstraction that is much easier to work with. If abstractions for a given application do not yet exist, it’s possible to write it directly using libbpf in C and compile into eBPF bytecode using LLVM <d-cite key="ebpf_what_is"></d-cite>. Besides, engineers also use Go and its libraries eBPF <d-cite key="ebpf-go"></d-cite> and libbpggo <d-cite key="libbpfgo"></d-cite>, as well as Rust libraries aya <d-cite key="aya-ebpf"></d-cite> and libbpf-rs <d-cite key="libbpf-rs"></d-cite>.</p> <p><b>Loading and verifying.</b> After eBPF program has been developed, it can be loaded into the kernel to be attached at the predefined hook using bpf system call. Users typically do not need to do it manually, since existing libraries take care of that. Before being attached to the defined hook, eBPF applications go through verification and JIT compilation. JIT compilation translates eBPF bytecode into machine-specific instruction set to optimize execution speed and makes programs run as if natively compiled kernel code <d-cite key="ebpf_what_is"></d-cite> .</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/loader.webp" sizes="95vw"/> <img src="/assets/img/loader.webp" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> eBPF loader and verification architecture. <d-cite key="ebpf_what_is"></d-cite> </div> <p><b>Helper calls.</b> Helper functions allow eBPF programs to directly and safely interact with the kernel. There is a predefined constantly-growing set of them to avoid calling arbitrary unsafe kernel functions. Having such a set is also important for cross-compatibility of eBPF code between kernel version. As they are defined as part of the userspace API, programmers can rely on them not disappearing or changing. Helpers can generate random numbers, get current date and time, help access eBPF maps (more about maps in a later section), create loops, and print logs, etc <d-cite key="ebpf-helper-functions"></d-cite>.</p> <p><b>Tail and function calls.</b> Taiд calls allow to break upeBPF program into multiple parts and call one after the other. They are different from function calls in that control does not go back to the previous subprogram, but keeps going forward sequentially. To use tail calls, one needs to add BPF_MAP_TYPE_PROG_ARRAY map to their program and fill with reference to other programs and then use bpf_tail_call with a reference to the map and array index to perform the tail call <d-cite key="ebpf-tail-calls"></d-cite> . Each target of the call is a separate eBPF programs, so adding them can allow to to greatly increase complexity of the overall program. Each such subprogram has to independently be validated by the verifier and gets its own memory and complexity limit. It can also be used to update a program version during runtime.</p> <h3 id="ebpf-verifier">eBPF Verifier</h3> <p>Using eBPF is generally safer than loading custom modules into the kernel, since all eBPF programs must pass the verification step to be executed. It is crucial that eBPF programs do not affect the stability and correctness of the operating system and do not compromise it in any way. The verifier validates that the program meets several conditions, such as: (1) the process loading the eBPF program holds the required privileges to execute it in the kernel; (2) the loaded program does not crash or otherwise harm the system; (3) it always runs to completion; (4) it does not access memory that it does not validate <d-cite key="ebpf_verifier"></d-cite>. As the eBPF verifier employs abstract interpretation, a process where it traverses the program and gathers approximations across different abstract domains to identify potentially invalid behaviors, it has evolved into one of the most complex systems within the eBPF <d-cite key="state-embeddings"></d-cite>.</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/verif.webp" sizes="95vw"/> <img src="/assets/img/verif.webp" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> eBPF verifier. <d-cite key="ebpf_what_is"></d-cite> </div> <h3 id="ebpf-maps">eBPF Maps</h3> <p>eBPF maps provide a way to store and share different data between kernel and user space. As eBPF programs are stateless by default, they add the ability to hold information for the program’s runtime duration. Some maps exist to support specific helper functions. Maps themselves are also accessed via helper functions from in-kernel eBPF programs and via bpf syscall from the user space <d-cite key="kernel-bpf-maps"></d-cite>.</p> <p>Broadly, eBPF maps can be categorized into four main groups. The fundamental maps include arrays and hash tables (BPF_MAP_TYPE_ARRAY, BPF_MAP_TYPE_HASH) with their per-CPU and LRU variants. Advanced data structures comprise Bloom filters (BPF_MAP_TYPE_BLOOM_FILTER) and LPM tries (BPF_MAP_TYPE_LPM_TRIE). System resource maps handle cgroup storage and device mapping (BPF_MAP_TYPE_CGROUP_STORAGE, BPF_MAP_TYPE_DEVMAP), while networking is supported through various socket-specific maps (BPF_MAP_TYPE_SOCKMAP, BPF_MAP_TYPE_XSKMAP) <d-cite key="kernel-bpf-maps"></d-cite>.</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/map-architecture.webp" sizes="95vw"/> <img src="/assets/img/map-architecture.webp" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> eBPF Maps. <d-cite key="ebpf_what_is"></d-cite> </div> <p>Interestingly, eBPF maps, despite being widely used, have barely been studied. A recent study benchmarked their performance characteristics and demostrated access overhead of different maps <d-cite key="maps-performance"></d-cite>. They find that per-cpu map suffers from memory access overhead amplification when inserting new keys and writing 4 bytes to a map has nearly the same overheads as writing 256 bytes. Memory footprint and cache hotness are two key factors affecting the overhead of eBPF maps. According to this paper, with a small memory footprint, overhead of accessing eBPF maps under a cold cache versus a hot cache is an order of magnitude higher. Importantly, when a program is attached to more hooks, it has lower amortized execution time cost, which they call “volume discount.” So, attaching eBPF program to three system classes instead of one can gain execution time that is 35%-84% lower <d-cite key="maps-performance"></d-cite>.</p> <hr/> <p>eBPF has fundamentally changed how we interact with operating systems. By enabling safe, dynamic, and efficient modifications to kernel behavior, it solves problems that once required years of development and significant risk. This technology is already widely adopted in networking, observability, and security, proving its real-world value across industries.</p> <p>Its tools and libraries make it increasingly accessible, and its potential is still growing as more use cases emerge. For engineers, eBPF is not just a tool—it’s an opportunity to innovate directly at the heart of the system.</p> <p>If you’re curious, start small. Explore the libraries, try writing a basic program, and see the impact for yourself. The future of system-level development is here, and eBPF is leading the way.</p> <p>I will definitely be writing much more about it as I have read dozens of research papers on it, so stay tuned!</p>]]></content><author><name></name></author><category term="explainer"/><category term="kernel"/><category term="systems"/><category term="ebpf"/><summary type="html"><![CDATA[Imagine rewriting kernel behavior on the fly. That’s the power of eBPF.]]></summary></entry><entry><title type="html">Wait, Wi-Fi Doesn’t Work Underwater?! Underwater Wireless Communications</title><link href="https://veronika-kitsul.github.io/blog/2024/underwater-wireless/" rel="alternate" type="text/html" title="Wait, Wi-Fi Doesn’t Work Underwater?! Underwater Wireless Communications"/><published>2024-12-26T19:41:16+00:00</published><updated>2024-12-26T19:41:16+00:00</updated><id>https://veronika-kitsul.github.io/blog/2024/underwater-wireless</id><content type="html" xml:base="https://veronika-kitsul.github.io/blog/2024/underwater-wireless/"><![CDATA[<p>My boyfriend is big on swimming. Once, he mentioned he’d like to get underwater headphones to listen to music while swimming. It never really occurred to me you need special headphones for that—I avoid swimming pools and water at any cost—but it does make sense.</p> <p>When I researched headphones for him, I realized that none of them were quite what I was looking for (disappointed face). It feels like underwater headphone companies have dug up 20-year-old tech and are still selling us “download-your-music-on-an-SD-card-and-listen-in-the-pool” models.</p> <div class="reddit-embed" data-embed-media="www.redditmedia.com" data-embed-parent="false"> <a href="https://www.reddit.com/r/Swimming/comments/16m30qd/headphones_for_swimming/">View on Reddit</a> </div> <script async="" src="https://embed.redditmedia.com/widgets/platform.js" charset="UTF-8"></script> <p><br/></p> <p>But then again, because swimmers are both in the air and underwater, it apparently makes things harder and then might not work? Are any of them even worth buying? There are multiple dozens of Reddit posts on the topic and even comparison articles from major news outlets.</p> <p>As I dove into Reddit threads and news comparisons, I realized that the problem isn’t just headphones. Wireless communication underwater is its own complex, fascinating challenge. Today, I am not trying to sell you underwater headphones (not that I would not want to). Instead, I want to dive deeper into what makes wireless communication so hard underwater and how it’s tackled across different fields.</p> <hr/> <p>Underwater wireless communications (UWC) are vastly important for ocean explorations, military and security applications, environmental monitoring, and offshore industries. Marine biologists and climate researchers install devices to keep track of ocean pollution, for real-time coral reef studies, and animal tagging to study migration patters. They are also vital for submarine communication, detecting oil spills, supporting undersea farms, and guiding divers during exploration missions. UWC make it possible to gather critical data and carry out operations in some of the most challenging environments on Earth.</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/uowc.webp" sizes="95vw"/> <img src="/assets/img/uowc.webp" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> Example applications of underwater wireless communications. <d-cite key="fang23"></d-cite> </div> <p>As you can imagine, using wireless communications for such purposes is much more convenient than dealing with heavy and expensive cables. Such devices also have larger potential for reduced deployment and maintenance cost. Using UWC also offers a greater flexibility for Autonomous Underwater Vehicles (AUVs) and Remote Operated Vehicles (ROVs), which could enable real-time communication for mobile devices.</p> <hr/> <h3 id="radio-frequency-communications">Radio Frequency Communications</h3> <p>In usual terrestial communications, we primarily use radio waves (or radio frequency - RF), which are just electromagnetic waves that transmit data wirelessly. Different applications (e.g., Bluetooth, Wi-Fi, cellular) use specific frequency bands to not interfere with other signals. RF communications on air are incredibly versatile and have come a long way. However, they barely propagate in the water.</p> <p>Underwater, the propagation of RF signals is drastically affected by the environment, primarily water salinity. This is because saltwater is a good conductor of electricity, and electromagnetic waves lose energy quickly as they induce currents in the water. This process is called attenuation.</p> <p>For usual terrestrial communication frequencies, such as the very high and ultra-high frequency ranges (30–300 MHz, used by TV broadcasts and Wi-Fi), they can only propagate ~cm in seawater. For comparison, the same frequencies can travel many kilometers in the air.</p> <p>Lower frequency signals, however, don’t suffer from the signal loss (attenuation) as much. At extremely and very-low frequency (ELF and VLF, respectively), signal attenuation is low enough to allow for reliable communications over several kilometers. However, these frequencies come with significant limitations, primarily on bandwidth. ELF bandwidth is only 3 Hz to 3 kHz and VLF - 3 kHz to 30 kHz. Those frequency ranges are not wide enough to enable transmissions at high data rates. For context, Wi-Fi operates in the gigahertz (GHz) range and can transmit data at speeds of hundreds of megabits per second (Mbps). ELF and VLF can only handle up to 3 kbps (kilobits per second), which is more suitable for sending simple commands or text data.</p> <p>When we look at how exactly RF waves attenuate underwater, frequency is a key factor, especially since it’s a much larger number than others. Underwater RF communications signal attenuates like so:</p> \[\alpha(f) = \sqrt{\pi \sigma \mu_0} \sqrt{f},\] <p>where \(\alpha(f)\) is channel attenuation per meter, \(f\) - RF (carrier) signal frequency in Hertz, \(\sigma\) - water conductivity in Siemens per meter, \(\mu_0 \approx 4\pi \cdot 10^{-7} \ {H/m}\) - vacuum permeability (water has the same permeability as vacuum). Now, conductivity is a function of salinity and temperature, for seawater, it is around 4.3 \({S/m}\), but for fresh water - only 0.001 to 0.01 \({S/m}\), which is two-three magnitudes lower and plays a huge role. Thus, the main aspect to be considered to characterize the wireless channel for RF transmission is the salinity of the water.</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/table-480.webp 480w,/assets/img/table-800.webp 800w,/assets/img/table-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/table.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> RF signal propagation attenuation.<d-cite key="Gussen2016Survey"></d-cite> </div> <p>RF signals are also highly susceptible to the Doppler effect, a phenomenon where the frequency of a wave changes relative to the movement of the transmitter or receiver. This effect can cause significant signal distortion in environments with moving objects, such as underwater drones, submarines, or waves. The Doppler effect becomes particularly problematic for maintaining reliable communication, as it can interfere with data decoding and synchronization, especially at higher frequencies. These limitations mean that while RF signals hold promise in specific use cases, they often need to be combined with other technologies, like acoustic or optical systems, to provide robust underwater communication.</p> <p>Despite being used in naval and environmental applications, underwater RF communications have large and expensive equipment and require high transmission power. Submarines often rely on RF in ELF or VLF for receiving orders from command centers, as these signals can penetrate deep into the ocean. However, they cannot transmit back using the same method because generating these signals requires massive infrastructure. Additionally, all the equipment must be properly encapsulated for operation in the underwater environment</p> <p>One advantage of RF signals is that they can cross the water-air boundary, making them useful for communication between underwater devices and surface stations, such as buoys or drones. Additionally, RF signals can propagate through the seabed, making them promising for use in shallow water environments, since waves can then travel in multiple directions (multipath) and could be recombined together at the receiver.</p> <div class="row mt-3"> <div class="col-sm-11 mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/seabed-multi-480.webp 480w,/assets/img/seabed-multi-800.webp 800w,/assets/img/seabed-multi-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/seabed-multi.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> RF signal multipath propagation through the seabed in shallow water. <d-cite key="Gussen2016Survey"></d-cite> </div> <h3 id="optical-communications">Optical Communications</h3> <p>Driven by the need for higher bandwidths and data rates that RF simply couldn’t achieve, researchers have explored other parts of the electromagnetic spectrum for underwater communication-light waves in the optical frequency range (\(300 GHz − 10^{15} Hz\)). Unlike RF signals, which treat water as a conductor, light waves in the optical frequency range interact with water as a dielectric. This shift occurs because seawater transitions from behaving like a conductor to acting like a dielectric medium at around 250 GHz. This happens because at high-frequency oscillations, seawater ions cannot respond to fast enough to interact with the waves and less of the wave energy dissipates as heat.</p> <p>Optical communications offer unique advantages but come with their own challenges. For one, light waves can propagate only over tens of meters in water due to absorption and scattering, which are more significant than in air. However, they benefit from a negligible Doppler spread due to the high speed of light in seawater. The refractive index of seawater, approximately \(n ∼ 1.33\) reduces the speed of light in the medium to around \(c_{light} = 2.25 \cdot 10^8 {m/s}\). Despite this reduction compared to the speed of light in a vacuum, the speed remains significantly higher than the velocities typically encountered in underwater scenarios, such as the movement of underwater vehicles or water currents. This high propagation speed minimizes the relative frequency shifts caused by motion, effectively rendering Doppler spread insignificant in the context of optical communication under water.</p> <p>The effective transmission distance depends heavily on the frequency range of the optical signal. Signals within the blue-green optical window experience significantly lower propagation attenuation due to reduced absorption and scattering in this part of the spectrum, making it ideal for underwater communication.</p> <div class="row mt-3"> <div class="col-sm-10 mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/Attenuation-of-light-underwater-480.webp 480w,/assets/img/Attenuation-of-light-underwater-800.webp 800w,/assets/img/Attenuation-of-light-underwater-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/Attenuation-of-light-underwater.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> Light spectrum absorption in the ocean. <d-cite key="Luczynski2017Underwater"></d-cite> </div> <p>However, optical communication generally requires a clear line-of-sight between the transmitter and receiver. This necessity introduces challenges in maintaining the communication link, often requiring some form of direction tracking or alignment mechanism to ensure continuous connectivity as the transmitter or receiver moves or environmental conditions change.</p> <p>The propagation of light underwater is influenced by two main categories: inherent optical properties (IOPs) and apparent optical properties (AOPs). IOPs pertain to the characteristics of the medium itself (water), while AOPs are linked to the light source, such as its directionality and intensity. Among these, IOPs play a more critical role in determining how light propagates through water, particularly through absorption and scattering processes.</p> <p>Absorption occurs at various components present in the water, including chlorophyll in phytoplankton, colored dissolved organic matter (CDOM), water molecules, and dissolved salts. These elements absorb light at specific wavelengths, significantly impacting the signal’s strength over distance.</p> <p>Scattering, on the other hand, changes the direction of photons as they interact with the medium. Scattering is caused by salt ions in pure water, particulate matter, and even interference from fish and other aquatic organisms. The nature of scattering depends on the size of the scattering particles relative to the wavelength of light. For particles smaller than the wavelength, scattering is described by the Rayleigh model, while for particles larger than the wavelength, it is governed by Mie theory. This scattering not only affects signal strength but also disrupts the coherence of the light beam, further limiting the effective range and reliability of underwater optical communication.</p> <div class="row mt-3"> <div class="col-sm-7 mt-3 mt-md-0 mx-auto" style="text-align: center;"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/raylelgh-scattering-480.webp 480w,/assets/img/raylelgh-scattering-800.webp 800w,/assets/img/raylelgh-scattering-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/raylelgh-scattering.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/Mie-scattering-is.ppm" sizes="95vw"/> <img src="/assets/img/Mie-scattering-is.ppm" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> a - Rayleigh scattering for different wavelengths <d-cite key="WindyApp2024WhySkyBlue"></d-cite>. b - Rayleigh scattering vs Mie scattering comparison <d-cite key="Barnhart2020RayleighLidar"></d-cite>. </div> <p>In addition to absorption and scattering, many applications utilize the backscattering coefficient that measures the amount of light scattered back toward the transmitter. The backscattering coefficient is particularly valuable for assessing water quality, as it provides insights into water turbidity. This information can be leveraged to design intelligent optical communication systems, such as smart transmitters that dynamically adjust transmission power and data rates based on the current water conditions.</p> <p>Water quality varies significantly across different locations worldwid due to differences in biological activity, sedimentation, and human impact. For example, the Pacific Ocean tends to have clearer waters in open regions due to lower sedimentation and biological particles, whereas coastal waters in regions like the Atlantic Ocean or Indian Ocean often exhibit higher turbidity due to denser populations, river outflows, and industrial activity. Furthermore, nutrient-rich upwelling zones, such as those off the coast of South America, lead to higher particle concentrations, impacting both scattering and absorption characteristics. Furthermore, researchers specify water clarity levels since optical signals are easily influenced by any changes in the environment. In pure seawater, most signal loss arises from absorption, with minimal scattering effects. In clear ocean water, scattering losses increase due to a higher concentration of particles, while coastal ocean water features even greater particle concentrations, further amplifying both scattering and absorption losses. At the extreme, turbid harbor and estuary waters exhibit the highest particle concentrations, resulting in substantial degradation of optical signals. Understanding these variations is essential for optimizing underwater communication systems for specific environments.</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/optical-prop-480.webp 480w,/assets/img/optical-prop-800.webp 800w,/assets/img/optical-prop-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/optical-prop.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> Optical signal quality for different water types <d-cite key="fang23"></d-cite>. </div> <p>Underwater optical communication systems rely on specialized components at both the transmitter and receiver ends, tailored to meet specific requirements. At the transmitter end, generating optical signals from electrical inputs involves three key components: an optical source, a projection optical system, and a beam steering mechanism. The optical source can be either a laser or an LED, each with distinct characteristics suited to various system needs. Lasers are typically selected based on the application’s requirements.</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/led-uw-480.webp 480w,/assets/img/led-uw-800.webp 800w,/assets/img/led-uw-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/led-uw.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> Propagation comparison of different signals <d-cite key="Wu2017BlueLaser"></d-cite>. </div> <p>Establishing a spatially aligned point-to-point connection between the transmitter and receiver is critical to ensure sufficient signal power for decoding. Any misalignment can significantly degrade performance. Emerging research focuses on smart optical systems, where transmitters dynamically estimate water quality via backscattered signals and adjust transmission power accordingly, optimizing performance in varying underwater conditions.</p> <p>The receiver end consists of collection optics, such as a single lens or an array of lenses, paired with a photodetector to convert optical signals into electrical ones. The choice of photosensor depends on the application.</p> <p>While the ideal photosensor would be cheap, small, robust, and power-efficient, current technology cannot meet all these criteria simultaneously, necessitating compromises. These components collectively define the performance and feasibility of underwater optical communication systems, emphasizing the importance of careful selection and alignment for reliable operation.</p> <div class="row mt-3"> <div class="col-sm-11 mt-3 mt-md-0 mx-auto" style="text-align: center;"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/uwos-480.webp 480w,/assets/img/uwos-800.webp 800w,/assets/img/uwos-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/uwos.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/sensors-uw.webp" sizes="95vw"/> <img src="/assets/img/sensors-uw.webp" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> a - Underwater wireless optical communication system detailing transmitters and receivers <d-cite key="Lin2016BlueLEDs"></d-cite>, <d-cite key="Schirripa2020UnderwaterOptical"></d-cite>. </div> <p>Underwater optical communication faces a variety of challenges that stem from both the physical environment and the limitations of current technologies. It has a surprising amount of noise sources: excess noise (from signal amplification), quantum shot noise (caused by random variations in photon counts), optical excess noise (arising from transmitter imperfections), optical background noise due to environmental clutter, photodetector dark current noise—caused by electrical current leakage, and electronic noise from components!</p> <p>To address these issues, optical systems must also navigate several operational challenges. The channel model is heavily influenced by water type, turbidity, and the size of the receiver lens aperture. Channel dispersion must be quantified to configure the most effective signal detection methods, while changes in directionality necessitate special signal processing algorithms. Transmitters and receivers must often rely on closed-loop feedback mechanisms and filter received signals to counteract environmental noise, applying time-domain, frequency-domain, or spatial filtering as needed. The dependence on water turbidity remains a major constraint, limiting propagation distance and data rates. Emerging technologies, such as smart transmitters capable of processing backscattered signals, hold promise for dynamically adapting power and data rates to varying environmental conditions.</p> <p>Despite these hurdles, underwater optical communication has found applications in several key areas, including underwater wireless sensor networks, autonomous underwater vehicles (AUVs), and real-time data transfer for oceanographic research. These systems are crucial for monitoring marine environments, exploring the deep sea, and enabling military and commercial operations underwater. However, significant challenges remain, such as expanding the propagation range, achieving higher data rates, and developing robust, cost-effective components that can operate reliably in diverse aquatic environments. Overcoming these obstacles will be critical for advancing underwater optical communication and unlocking its full potential in the years to come.</p> <h3 id="acoustic-communications">Acoustic Communications</h3> <p>Acoustic communication is a key method for transmitting information underwater, particularly over long distances where optical communication is limited. Unlike optical signals, acoustic waves can propagate over kilometers with relatively low attenuation, depending on factors such as frequency and water conditions. The propagation speed of sound underwater is approximately \(1500 {m/s}\), significantly slower than the speed of light, which results in challenges such as high latency and multipath propagation.</p> <p>Acoustic waves are generated using transducers, devices that convert electrical signals into sound waves. These waves then propagate through the water and are received by hydrophones, which detect the sound and convert it back into electrical signals for processing. This fundamental process underpins underwater acoustic communication systems, which play a crucial role in long-distance data transmission in marine environments.</p> <p>One key application of this technology is communication with submarines. Submarines rely on acoustic signals to maintain secure and long-range communication while submerged, as sound waves can travel great distances underwater with relatively low attenuation. Similarly, autonomous underwater vehicles (AUVs), which are robotic systems used for tasks such as underwater exploration, environmental monitoring, and industrial operations, use acoustic communication to receive commands and transmit data back to their operators.</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/uwan-480.webp 480w,/assets/img/uwan-800.webp 800w,/assets/img/uwan-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/uwan.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> Underwater acoustic network <d-cite key="MarketResearchFuture2024UnderwaterAcoustic"></d-cite>. </div> <p>Another important application involves sonobuoys, small, floating platforms equipped with hydrophones and communication systems. These devices are deployed in the ocean to monitor underwater activity. For instance, sonobuoys are used in anti-submarine warfare to detect and track submarines, in marine biology to monitor the movements of marine animals, and in oceanography to collect data on environmental conditions. Sonobuoys transmit the data they collect to surface vessels or aircraft via radio signals, making them a critical tool for monitoring underwater environments.</p> <p>An essential natural phenomenon that enhances acoustic communication is the SOFAR channel (Sound Fixing and Ranging channel). This is a layer in the ocean where sound waves can travel extremely long distances with minimal energy loss. The SOFAR channel forms due to a combination of temperature, salinity, and pressure conditions, which create a “trap” for sound waves. This allows signals to propagate efficiently across vast oceanic distances, making it particularly useful for submarine communication, long-range monitoring, and even detecting underwater events such as earthquakes or underwater explosions.</p> <p>However, acoustic communication faces significant challenges. One of the primary limitations is bandwidth, which is restricted to the kilohertz range, resulting in low data rates (typically in the kilobits per second range). This makes acoustic communication unsuitable for high-speed data transfer. Moreover, attenuation increases with frequency, which means higher frequencies experience greater path loss, further limiting the effective bandwidth. Over long distances, such as 100 kilometers, the usable bandwidth can drop sharply to just 2 kHz.</p> <p>Multipath propagation also poses a major challenge. As sound waves reflect off surfaces such as the seabed and the water surface, they create a multipath channel. These reflections cause signal interference, longer delays, and degraded data quality. Additionally, underwater environments are filled with non-Gaussian noise from both natural and human sources, including wind, marine life, shipping activities, and offshore wind farms. Modeling this noise and accounting for acoustic channel fading remains a complex task.</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/multipath-480.webp 480w,/assets/img/multipath-800.webp 800w,/assets/img/multipath-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/multipath.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> Underwater acoustic multipath <d-cite key="MarketResearchFuture2024UnderwaterAcoustic"></d-cite>. </div> <p>Additionally, human activities contribute to underwater noise, with shipping traffic and wind farms introducing disruptions that further degrade signal quality. Channel capacity, which determines the maximum amount of information that can be transmitted, depends heavily on transmission distance and environmental factors. Longer distances sharply reduce bandwidth, exacerbating the challenges of low data rates.</p> <div class="row mt-3"> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/noise-480.webp 480w,/assets/img/noise-800.webp 800w,/assets/img/noise-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/img/noise.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> </div> <div class="caption"> Variious sources of underwater noise <d-cite key="OSPARUnderwaterNoise"></d-cite>. </div> <p>Another significant issue is the Doppler effect, which arises from relative motion between the transmitter, receiver, and moving water. Unlike in satellite communication, where the high speed of light makes the Doppler effect negligible, in acoustic communication, the relatively low speed of sound (~1500 m/s) makes the Doppler effect a significant factor. Frequency shifts and spreading caused by the Doppler effect lead to delays and synchronization issues, complicating signal processing. The Doppler effect is proportional to \(a = {v/c}\), where \(v\) is the relative velocity and \(c\) is the speed of sound. This proportionality makes even modest motion in underwater environments impactful, resulting in phase errors and delays that must be compensated for in communication systems.</p> <p>Despite these challenges, acoustic communication remains the backbone of underwater data exchange due to its ability to cover long distances and navigate the unique properties of aquatic environments. Advances in transducer design, noise mitigation techniques, and sophisticated signal processing algorithms are critical to overcoming these limitations and enhancing the reliability and efficiency of acoustic communication systems. These innovations will ensure the continued viability of this technology in applications ranging from military operations to marine research and environmental monitoring.</p> <hr/> <p>Underwater wireless communication is an indispensable tool in modern marine exploration, research, and industry. Each mode—radio frequency, optical, and acoustic—has its unique strengths and challenges, making them suitable for specific applications. While RF struggles with range and attenuation, optical systems excel in high-speed, short-range data transfer, and acoustic communication remains the backbone for long-distance transmissions.</p> <p>The limitations of these technologies are significant, but they are being actively addressed through advancements in hybrid systems, smarter signal processing, and adaptable hardware. These innovations will shape the future of underwater connectivity, enabling deeper exploration, improved environmental monitoring, and more efficient underwater operations.</p> <p>As we tackle the challenges of range, speed, and reliability, these systems are pushing the boundaries of what’s possible in one of Earth’s most demanding environments. The future is bright—or, in the case of optical signals, blue-green.</p> <p>So next time you’re frustrated by slow Wi-Fi, just remember: at least you’re not trying to stream Netflix from a submarine. 🌊</p>]]></content><author><name></name></author><category term="explainer"/><category term="wireless"/><category term="underwater"/><summary type="html"><![CDATA[Turns out, Wi-Fi isn’t a fan of water! So how do submarines, underwater drones, and ocean explorers stay connected?]]></summary></entry></feed>