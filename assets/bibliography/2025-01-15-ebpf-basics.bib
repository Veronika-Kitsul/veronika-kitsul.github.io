@misc{ebpf_windows,
  title        = {eBPF for Windows},
  url = {https://github.com/Microsoft/ebpf-for-windows}
}

@misc{ebpf_case_studies,
  title        = {eBPF Case Studies},
  url = {https://ebpf.io/case-studies/}
}

@misc{android_bpf,
  author       = {Android Documentation},
  title        = {Extend the Kernel with eBPF},
  url = {https://source.android.com/docs/core/architecture/kernel/bpf}
}

@misc{eBPFSummit2024,
  title = {eBPF Summit 2024},
  url = {https://ebpf.io/summit-2024/},
  year = {2024},
  note = {Accessed: 2024-11-24}
} 

@misc{cilium2024kubecon,
  author       = {Cilium},
  title        = {Cilium Talks at KubeCon EU 2024},
  year         = {2024},
  month        = {February},
  day          = {02},
  url = {https://cilium.io/blog/2024/02/02/cilium-at-kube-con-eu-2024/}
}

@misc{linuxfoundation2023ciliumcon,
  author       = {The Linux Foundation Events},
  title        = {Cilium Con},
  year         = {2023},
  url = {https://events.linuxfoundation.org/archive/2023/kubecon-cloudnativecon-europe/co-located-events/ciliumcon/}
}

@misc{ebpf_what_is,
  title        = {eBPF Documentation},
  author       = {ebpf.io},
  url = {https://ebpf.io/what-is-ebpf/}
}

@misc{eBPFApplications,
  title = {eBPF Applications Landscape},
  url = {https://ebpf.io/applications/},
  note = {Accessed: 2024-11-24}
} 

@misc{linuxfoundation2024stateofebpf,
  title        = {The State of eBPF},
  author       = {The Linux Foundation},
  url = {https://www.linuxfoundation.org/research/state-of-ebpf}
}

@misc{linuxkernel_program_types,
  title        = {Program Types and ELF Sections},
  author       = {The Linux Kernel},
  url = {https://docs.kernel.org/bpf/libbpf/program_types.html}
}

@misc{ebpf-go,
  title        = {eBPF: A Pure Go Library for Loading, Compiling, and Debugging eBPF Programs},
  author       = {Cilium Project},
  url = {https://github.com/cilium/ebpf},
  note         = {Open-source eBPF library},
}

@misc{libbpfgo,
  title        = {libbpf-go: Go Bindings for libbpf},
  url          = {https://github.com/aquasecurity/libbpfgo},
  note         = {Go bindings for libbpf eBPF library},
}

@misc{aya-ebpf,
  title        = {Aya: Ergonomic eBPF Development in Rust},
  url          = {https://github.com/aya-rs/aya},
  note         = {Rust library for eBPF development},
}
'
@misc{libbpf-rs,
  title        = {libbpf-rs: Rust Bindings for libbpf},
  url          = {https://github.com/libbpf/libbpf-rs},
  note         = {Rust bindings for the libbpf eBPF library},
}

@misc{ebpf-helper-functions,
  title        = {Helper Functions in eBPF},
  author       = {eBPF Docs},
  url          = {https://docs.ebpf.io/linux/helper-function/},
}

@misc{ebpf-tail-calls,
 title        = {Tail Calls in eBPF},
 author       = {eBPF Docs},
 url          = {https://docs.ebpf.io/linux/concepts/tail-calls/},
}

@misc{ebpf_verifier,
  author       = {The Linux Kernel Documentation},
  title        = {eBPF Verifier},
  year         = {2024},
  url = {https://docs.kernel.org/bpf/verifier.html}
}

@inproceedings{state-embeddings,
author = {Hao Sun, Zhendong Su},
title = {Validating the eBPF Verifier via State Embedding},
booktitle = {18th USENIX Symposium on Operating Systems Design and Implementation (OSDI 24)},
year = {2024},
isbn = {978-1-939133-40-3},
address = {Santa Clara, CA},
pages = {615--628},
url = {https://www.usenix.org/conference/osdi24/presentation/sun-hao},
publisher = {USENIX Association}
}

@inproceedings{maps-performance,
author = {Liu, Chang and Tak, Byungchul and Wang, Long},
title = {Understanding Performance of eBPF Maps},
year = {2024},
isbn = {9798400707124},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3672197.3673430},
doi = {10.1145/3672197.3673430},
abstract = {The Linux community has witnessed the rapid development of eBPF technology that allows users to load custom programs into the Linux kernel to extend its capabilities. A key feature that makes eBPF powerful is eBPF maps, which provide data storage and communication capabilities for eBPF programs. However, despite being widely used in eBPF programs, the performance of eBPF maps has received little attention. To understand the performance characteristics of eBPF maps, we conduct a comprehensive benchmark on them. The benchmark results demonstrate the access overhead of different types of eBPF maps and reveal the impact of various factors on the access overhead. By analyzing the benchmark results, we derive some implications for eBPF users to use eBPF maps more efficiently.},
booktitle = {Proceedings of the ACM SIGCOMM 2024 Workshop on EBPF and Kernel Extensions},
pages = {9â€“15},
numpages = {7},
keywords = {eBPF, eBPF map, performance benchmark},
location = {Sydney, NSW, Australia},
series = {eBPF '24}
}

@misc{kernel-bpf-maps,
 title        = {BPF Maps: The Linux Kernel Documentation},
 author       = {Linux Kernel Developers},
 howpublished = {Online documentation: \url{https://docs.kernel.org/bpf/maps.html}},
 url          = {https://docs.kernel.org/bpf/maps.html},
 note         = {Official Linux kernel documentation on BPF maps},
}
